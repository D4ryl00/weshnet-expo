syntax = "proto3";

package weshnet.errcode;

import "gogoproto/gogo.proto";

option go_package = "berty.tech/weshnet/pkg/errcode";

option (gogoproto.goproto_enum_prefix_all) = false;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;

enum ErrCode {
  //----------------
  // Special errors
  //----------------

  Undefined = 0; // default value, should never be set manually

  TODO = 666;              // indicates that you plan to create an error later
  ErrNotImplemented = 777; // indicates that a method is not implemented yet
  ErrInternal = 888; // indicates an unknown error (without Code), i.e. in gRPC

  //----------------
  // Generic errors
  //----------------

  // Parameters and I/O errors

  ErrInvalidInput = 100;
  ErrInvalidRange = 101;
  ErrMissingInput = 102;
  ErrSerialization = 103;
  ErrDeserialization = 104;
  ErrStreamRead = 105;
  ErrStreamWrite = 106;
  ErrStreamTransform = 110;
  ErrStreamSendAndClose = 111;
  ErrStreamHeaderWrite = 112;
  ErrStreamHeaderRead = 115;
  ErrStreamSink = 113;
  ErrStreamCloseAndRecv = 114;
  ErrMissingMapKey = 107;
  ErrDBWrite = 108;
  ErrDBRead = 109;
  ErrDBDestroy = 120;
  ErrDBMigrate = 121;
  ErrDBReplay = 122;
  ErrDBRestore = 123;
  ErrDBOpen = 124;
  ErrDBClose = 125;

  // Crypto errors

  ErrCryptoRandomGeneration = 200;
  ErrCryptoKeyGeneration = 201;
  ErrCryptoNonceGeneration = 202;
  ErrCryptoSignature = 203;
  ErrCryptoSignatureVerification = 204;
  ErrCryptoDecrypt = 205;
  ErrCryptoDecryptPayload = 206;
  ErrCryptoEncrypt = 207;
  ErrCryptoKeyConversion = 208;
  ErrCryptoCipherInit = 209;
  ErrCryptoKeyDerivation = 210;

  // Pattern errors

  ErrMap = 300;
  ErrForEach = 301;

  // Keystore errors

  ErrKeystoreGet = 400;
  ErrKeystorePut = 401;
  ErrNotFound = 404; // generic

  //-----------------
  // Specific errors
  //-----------------

  // OrbitDB errors

  ErrOrbitDBInit = 1000;
  ErrOrbitDBOpen = 1001;
  ErrOrbitDBAppend = 1002;
  ErrOrbitDBDeserialization = 1003;
  ErrOrbitDBStoreCast = 1004;

  // Handshake errors

  ErrHandshakeOwnEphemeralKeyGenSend = 1100;
  ErrHandshakePeerEphemeralKeyRecv = 1101;
  ErrHandshakeRequesterAuthenticateBoxKeyGen = 1102;
  ErrHandshakeResponderAcceptBoxKeyGen = 1103;
  ErrHandshakeRequesterHello = 1104;
  ErrHandshakeResponderHello = 1105;
  ErrHandshakeRequesterAuthenticate = 1106;
  ErrHandshakeResponderAccept = 1107;
  ErrHandshakeRequesterAcknowledge = 1108;

  // Contact Request errors

  ErrContactRequestSameAccount = 1200;
  ErrContactRequestContactAlreadyAdded = 1201;
  ErrContactRequestContactBlocked = 1202;
  ErrContactRequestContactUndefined = 1203;
  ErrContactRequestIncomingAlreadyReceived = 1204;

  // Group errors

  ErrGroupMemberLogEventOpen = 1300;
  ErrGroupMemberLogEventSignature = 1301;
  ErrGroupMemberUnknownGroupID = 1302;
  ErrGroupSecretOtherDestMember = 1303;
  ErrGroupSecretAlreadySentToMember = 1304;
  ErrGroupInvalidType = 1305;
  ErrGroupMissing = 1306;
  ErrGroupActivate = 1307;
  ErrGroupDeactivate = 1308;
  ErrGroupInfo = 1309;
  ErrGroupUnknown = 1310;
  ErrGroupOpen = 1311;

  // Message key errors

  ErrMessageKeyPersistencePut = 1500;
  ErrMessageKeyPersistenceGet = 1501;

  // Services Auth

  ErrServicesAuth = 4000;
  ErrServicesAuthNotInitialized = 4001;
  ErrServicesAuthWrongState = 4002;
  ErrServicesAuthInvalidResponse = 4003;
  ErrServicesAuthServer = 4004;
  ErrServicesAuthCodeChallenge = 4005;
  ErrServicesAuthServiceInvalidToken = 4006;
  ErrServicesAuthServiceNotSupported = 4007;
  ErrServicesAuthUnknownToken = 4008;
  ErrServicesAuthInvalidURL = 4009;

  // Services Replication

  ErrServiceReplication = 4100;
  ErrServiceReplicationServer = 4101;
  ErrServiceReplicationMissingEndpoint = 4102;

  // Services Directory

  ErrServicesDirectory = 4200;
  ErrServicesDirectoryInvalidVerifiedCredentialSubject = 4201;
  ErrServicesDirectoryExistingRecordNotFound = 4202;
  ErrServicesDirectoryRecordLockedAndCantBeReplaced = 4203;
  ErrServicesDirectoryExplicitReplaceFlagRequired = 4204;
  ErrServicesDirectoryInvalidVerifiedCredential = 4205;
  ErrServicesDirectoryExpiredVerifiedCredential = 4206;
  ErrServicesDirectoryInvalidVerifiedCredentialID = 4207;

  // Services Push

  ErrPush = 6000;
  ErrPushWrongAccount = 6001;
  ErrPushUnableToDecrypt = 6002;
  ErrPushInvalidPayload = 6003;
  ErrPushInvalidServerConfig = 6004;
  ErrPushMissingBundleID = 6005;
  ErrPushUnknownDestination = 6006;
  ErrPushProvider = 6007;
  ErrPushUnknownProvider = 6008;
  ErrNoProvidersConfigured = 6009;
  ErrInvalidPrivateKey = 6010;
}

message ErrDetails { repeated ErrCode codes = 1; }
